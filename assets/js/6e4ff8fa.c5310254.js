"use strict";(self.webpackChunksciotta_blog=self.webpackChunksciotta_blog||[]).push([[6823],{7606:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var i=t(4848),n=t(8453);const o={},r="Pir\xe2mide de Testes",d={id:"tests/test-pyramid",title:"Pir\xe2mide de Testes",description:"Defini\xe7\xe3o",source:"@site/docs/tests/test-pyramid.md",sourceDirName:"tests",slug:"/tests/test-pyramid",permalink:"/docs/tests/test-pyramid",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tests/test-pyramid.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Smoke Tests",permalink:"/docs/tests/smoke-test"}},a={},c=[{value:"Defini\xe7\xe3o",id:"defini\xe7\xe3o",level:2},{value:"Testes Unit\xe1rios",id:"testes-unit\xe1rios",level:2},{value:"Testes de Integra\xe7\xe3o",id:"testes-de-integra\xe7\xe3o",level:2},{value:"Testes de Servi\xe7o/API (Opcional)",id:"testes-de-servi\xe7oapi-opcional",level:2},{value:"Testes End-to-End (E2E)",id:"testes-end-to-end-e2e",level:2},{value:"Benef\xedcios da Pir\xe2mide de Testes",id:"benef\xedcios-da-pir\xe2mide-de-testes",level:2},{value:"Desafios",id:"desafios",level:2}];function l(e){const s={h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"pir\xe2mide-de-testes",children:"Pir\xe2mide de Testes"}),"\n",(0,i.jsx)(s.h2,{id:"defini\xe7\xe3o",children:"Defini\xe7\xe3o"}),"\n",(0,i.jsx)(s.p,{children:"A pir\xe2mide de testes, ou trof\xe9u de testes, \xe9 um conceito utilizado em desenvolvimento de software para representar a quantidade e os tipos de testes que devem ser realizados para garantir a qualidade do software. A pir\xe2mide de testes \xe9 dividida em diferentes camadas, cada uma representando um tipo de teste espec\xedfico. Essas camadas, de base para o topo, incluem:"}),"\n",(0,i.jsx)(s.h2,{id:"testes-unit\xe1rios",children:"Testes Unit\xe1rios"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Descri\xe7\xe3o"}),": S\xe3o a base da pir\xe2mide e representam a maior quantidade de testes."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Objetivo"}),": Testar unidades individuais de c\xf3digo, como fun\xe7\xf5es ou m\xe9todos, de forma isolada."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Exemplo"}),": Verificar se uma fun\xe7\xe3o matem\xe1tica retorna o resultado esperado para entradas espec\xedficas."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"testes-de-integra\xe7\xe3o",children:"Testes de Integra\xe7\xe3o"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Descri\xe7\xe3o"}),": Ficam acima dos testes unit\xe1rios e s\xe3o em menor quantidade."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Objetivo"}),": Testar a integra\xe7\xe3o entre diferentes m\xf3dulos ou componentes do sistema para assegurar que eles funcionam corretamente juntos."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Exemplo"}),": Verificar se uma fun\xe7\xe3o que depende de outra fun\xe7\xe3o externa retorna o resultado correto."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"testes-de-servi\xe7oapi-opcional",children:"Testes de Servi\xe7o/API (Opcional)"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Descri\xe7\xe3o"}),": Podem estar entre os testes de integra\xe7\xe3o e os testes end-to-end, dependendo da complexidade da aplica\xe7\xe3o."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Objetivo"}),": Testar as interfaces de servi\xe7os ou APIs para garantir que elas respondem corretamente a diferentes solicita\xe7\xf5es."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Exemplo"}),": Verificar se uma API RESTful retorna os dados corretos ao receber uma requisi\xe7\xe3o GET."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"testes-end-to-end-e2e",children:"Testes End-to-End (E2E)"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Descri\xe7\xe3o"}),": Ficam no topo da pir\xe2mide e s\xe3o os menos numerosos devido ao seu custo e complexidade."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Objetivo"}),": Testar o sistema como um todo, simulando cen\xe1rios reais de uso para garantir que a aplica\xe7\xe3o funciona corretamente do ponto de vista do usu\xe1rio final."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Exemplo"}),": Automatizar um fluxo completo de compra em um e-commerce, desde a sele\xe7\xe3o do produto at\xe9 a finaliza\xe7\xe3o da compra."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"benef\xedcios-da-pir\xe2mide-de-testes",children:"Benef\xedcios da Pir\xe2mide de Testes"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Rapidez"}),": Testes unit\xe1rios s\xe3o r\xe1pidos de executar, permitindo feedback r\xe1pido durante o desenvolvimento."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Confiabilidade"}),": Testes de integra\xe7\xe3o e end-to-end garantem que os componentes funcionem corretamente quando combinados."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Custo"}),": Testes unit\xe1rios e de integra\xe7\xe3o s\xe3o menos custosos de escrever e manter do que testes end-to-end."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"desafios",children:"Desafios"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Manuten\xe7\xe3o"}),": Testes de integra\xe7\xe3o e end-to-end podem ser mais dif\xedceis de manter devido \xe0 sua complexidade e depend\xeancias."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cobertura"}),": Assegurar que todos os cen\xe1rios cr\xedticos est\xe3o cobertos pode ser desafiador, especialmente com testes end-to-end."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Ao seguir a pir\xe2mide de testes, as equipes de desenvolvimento podem criar uma su\xedte de testes eficiente e equilibrada, garantindo a qualidade do software enquanto otimizam tempo e recursos."})]})}function u(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>d});var i=t(6540);const n={},o=i.createContext(n);function r(e){const s=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(o.Provider,{value:s},e.children)}}}]);