"use strict";(self.webpackChunksciotta_blog=self.webpackChunksciotta_blog||[]).push([[1380],{5234:(e,o,a)=>{a.r(o),a.d(o,{assets:()=>d,contentTitle:()=>t,default:()=>m,frontMatter:()=>n,metadata:()=>r,toc:()=>c});var s=a(4848),i=a(8453);const n={slug:"vantagens-css-in-js",title:"Vantagens de Usar CSS-in-JS em Aplica\xe7\xf5es React",author:"Thiago Sciotta",author_title:"Front End Engineer",author_url:"https://github.com/thiagog3",author_image_url:"https://avatars.githubusercontent.com/u/1863045?v=4",tags:["frontend","css","react"],image:"https://images.ctfassets.net/h7ezcprronse/1XOOFscNrSxjhA2xxrCNP1/d18d4707afed70b8b0b45d77b462b9cd/painting-911804_1280.jpg",enableComments:!0},t=void 0,r={permalink:"/blog/vantagens-css-in-js",editUrl:"https://github.com/thiagog3/sciotta-blog/edit/master/blog/blog/2024-04-20-vantagens-css-in-js.md",source:"@site/blog/2024-04-20-vantagens-css-in-js.md",title:"Vantagens de Usar CSS-in-JS em Aplica\xe7\xf5es React",description:"Com o crescimento do ecossistema React, a maneira de lidar com estiliza\xe7\xe3o em aplica\xe7\xf5es web evoluiu significativamente. Uma das abordagens que ganhou destaque \xe9 o CSS-in-JS, uma t\xe9cnica que permite escrever estilos CSS diretamente dentro do JavaScript.",date:"2024-04-20T00:00:00.000Z",tags:[{inline:!0,label:"frontend",permalink:"/blog/tags/frontend"},{inline:!0,label:"css",permalink:"/blog/tags/css"},{inline:!0,label:"react",permalink:"/blog/tags/react"}],readingTime:3.54,hasTruncateMarker:!0,authors:[{name:"Thiago Sciotta",title:"Front End Engineer",url:"https://github.com/thiagog3",imageURL:"https://avatars.githubusercontent.com/u/1863045?v=4"}],frontMatter:{slug:"vantagens-css-in-js",title:"Vantagens de Usar CSS-in-JS em Aplica\xe7\xf5es React",author:"Thiago Sciotta",author_title:"Front End Engineer",author_url:"https://github.com/thiagog3",author_image_url:"https://avatars.githubusercontent.com/u/1863045?v=4",tags:["frontend","css","react"],image:"https://images.ctfassets.net/h7ezcprronse/1XOOFscNrSxjhA2xxrCNP1/d18d4707afed70b8b0b45d77b462b9cd/painting-911804_1280.jpg",enableComments:!0},unlisted:!1,prevItem:{title:"Desenvolvendo um App com React Native e DDD",permalink:"/blog/react-native-ddd"},nextItem:{title:"A Magia das Viagens e Suas Lembran\xe7as Inesquec\xedveis",permalink:"/blog/explorando-o-mundo"}},d={authorsImageUrls:[void 0]},c=[{value:"O Que \xe9 CSS-in-JS?",id:"o-que-\xe9-css-in-js",level:2},{value:"Vantagens do CSS-in-JS",id:"vantagens-do-css-in-js",level:2},{value:"1. Escopo Local e Previs\xedvel",id:"1-escopo-local-e-previs\xedvel",level:3},{value:"2. Dinamicidade e Flexibilidade",id:"2-dinamicidade-e-flexibilidade",level:3},{value:"3. Melhor Manuten\xe7\xe3o e Organiza\xe7\xe3o",id:"3-melhor-manuten\xe7\xe3o-e-organiza\xe7\xe3o",level:3},{value:"4. Remo\xe7\xe3o de Estilos N\xe3o Utilizados",id:"4-remo\xe7\xe3o-de-estilos-n\xe3o-utilizados",level:3},{value:"5. Integra\xe7\xe3o com o Ecossistema React",id:"5-integra\xe7\xe3o-com-o-ecossistema-react",level:3},{value:"6. Suporte a SSR (Server-Side Rendering)",id:"6-suporte-a-ssr-server-side-rendering",level:3},{value:"Outras Abordagens e Bibliotecas",id:"outras-abordagens-e-bibliotecas",level:2},{value:"Conclus\xe3o",id:"conclus\xe3o",level:2}];function l(e){const o={h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(o.p,{children:["Com o crescimento do ecossistema React, a maneira de lidar com estiliza\xe7\xe3o em aplica\xe7\xf5es web evoluiu significativamente. Uma das abordagens que ganhou destaque \xe9 o ",(0,s.jsx)(o.strong,{children:"CSS-in-JS"}),", uma t\xe9cnica que permite escrever estilos CSS diretamente dentro do JavaScript."]}),"\n",(0,s.jsxs)(o.p,{children:["Bibliotecas como ",(0,s.jsx)(o.strong,{children:"Styled Components"})," e outras ferramentas populares, como ",(0,s.jsx)(o.strong,{children:"Emotion"})," e ",(0,s.jsx)(o.strong,{children:"Styled System"}),", t\xeam mudado a forma como desenvolvedores lidam com a estiliza\xe7\xe3o de componentes. Neste artigo, vamos explorar as vantagens de usar CSS-in-JS em suas aplica\xe7\xf5es React e como isso pode melhorar a produtividade e a manuten\xe7\xe3o do seu c\xf3digo."]}),"\n",(0,s.jsx)(o.h2,{id:"o-que-\xe9-css-in-js",children:"O Que \xe9 CSS-in-JS?"}),"\n",(0,s.jsx)(o.p,{children:"CSS-in-JS \xe9 uma abordagem que permite que voc\xea escreva CSS diretamente dentro de arquivos JavaScript. Isso significa que voc\xea pode criar e aplicar estilos a componentes React de uma forma program\xe1tica, utilizando toda a flexibilidade da linguagem JavaScript. As bibliotecas que implementam essa t\xe9cnica geralmente permitem a cria\xe7\xe3o de componentes estilizados, onde os estilos s\xe3o diretamente associados ao comportamento e estado dos componentes."}),"\n",(0,s.jsx)(o.h2,{id:"vantagens-do-css-in-js",children:"Vantagens do CSS-in-JS"}),"\n",(0,s.jsx)(o.h3,{id:"1-escopo-local-e-previs\xedvel",children:"1. Escopo Local e Previs\xedvel"}),"\n",(0,s.jsx)(o.p,{children:"Uma das maiores vantagens do CSS-in-JS \xe9 o escopo local dos estilos. Em abordagens tradicionais com CSS, \xe9 f\xe1cil acidentalmente sobrescrever estilos devido ao escopo global das classes CSS. Com CSS-in-JS, os estilos s\xe3o encapsulados dentro dos componentes, garantindo que n\xe3o haja colis\xf5es inesperadas. Isso significa que voc\xea pode nomear seus componentes de forma mais intuitiva, sem se preocupar com o impacto no restante da aplica\xe7\xe3o."}),"\n",(0,s.jsx)(o.h3,{id:"2-dinamicidade-e-flexibilidade",children:"2. Dinamicidade e Flexibilidade"}),"\n",(0,s.jsx)(o.p,{children:"Styled Components e outras bibliotecas CSS-in-JS permitem que voc\xea utilize vari\xe1veis, operadores e l\xf3gica dentro do seu CSS. Isso torna poss\xedvel criar estilos din\xe2micos que respondem diretamente ao estado dos componentes ou \xe0s props passadas. Por exemplo, voc\xea pode alterar a cor de um bot\xe3o com base no estado de erro ou sucesso, sem precisar adicionar ou remover classes manualmente:"}),"\n",(0,s.jsxs)(o.p,{children:["```javascript\nconst Button = styled.button`\nbackground-color: $",e=>e.primary?"blue":"gray",";\ncolor: white;\npadding: 10px 20px;\nborder-radius: 5px;\n`;\n```"]}),"\n",(0,s.jsx)(o.h3,{id:"3-melhor-manuten\xe7\xe3o-e-organiza\xe7\xe3o",children:"3. Melhor Manuten\xe7\xe3o e Organiza\xe7\xe3o"}),"\n",(0,s.jsx)(o.p,{children:"Manter o c\xf3digo CSS pode se tornar uma tarefa complexa \xe0 medida que o projeto cresce. Com CSS-in-JS, os estilos s\xe3o diretamente associados aos componentes, o que facilita a manuten\xe7\xe3o. Al\xe9m disso, a reutiliza\xe7\xe3o de estilos se torna mais pr\xe1tica, j\xe1 que voc\xea pode criar componentes estilizados que podem ser compartilhados em toda a aplica\xe7\xe3o."}),"\n",(0,s.jsx)(o.h3,{id:"4-remo\xe7\xe3o-de-estilos-n\xe3o-utilizados",children:"4. Remo\xe7\xe3o de Estilos N\xe3o Utilizados"}),"\n",(0,s.jsx)(o.p,{children:"Em aplica\xe7\xf5es grandes, \xe9 comum que o CSS cres\xe7a descontroladamente, com muitos estilos n\xe3o utilizados. CSS-in-JS resolve esse problema naturalmente, pois os estilos s\xe3o aplicados apenas aos componentes que est\xe3o em uso. Isso contribui para uma base de c\xf3digo mais enxuta e otimizada."}),"\n",(0,s.jsx)(o.h3,{id:"5-integra\xe7\xe3o-com-o-ecossistema-react",children:"5. Integra\xe7\xe3o com o Ecossistema React"}),"\n",(0,s.jsx)(o.p,{children:"CSS-in-JS se integra perfeitamente ao ecossistema React, facilitando o desenvolvimento de componentes coesos e reutiliz\xe1veis. Al\xe9m disso, a integra\xe7\xe3o com ferramentas de desenvolvimento como o ThemeProvider, do Styled Components, permite a aplica\xe7\xe3o de temas em toda a aplica\xe7\xe3o de forma consistente e f\xe1cil de gerenciar."}),"\n",(0,s.jsx)(o.h3,{id:"6-suporte-a-ssr-server-side-rendering",children:"6. Suporte a SSR (Server-Side Rendering)"}),"\n",(0,s.jsx)(o.p,{children:"Uma preocupa\xe7\xe3o comum ao utilizar CSS-in-JS \xe9 o suporte ao Server-Side Rendering (SSR). Felizmente, bibliotecas como Styled Components possuem suporte robusto a SSR, garantindo que os estilos sejam aplicados corretamente durante a renderiza\xe7\xe3o no servidor, melhorando a performance e o SEO da aplica\xe7\xe3o."}),"\n",(0,s.jsx)(o.h2,{id:"outras-abordagens-e-bibliotecas",children:"Outras Abordagens e Bibliotecas"}),"\n",(0,s.jsx)(o.p,{children:"Al\xe9m do Styled Components, outras bibliotecas populares no ecossistema CSS-in-JS incluem:"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Emotion"}),": Uma biblioteca flex\xedvel que oferece uma API similar ao Styled Components, com excelente suporte a temas e alta performance."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Styled System"}),": Focado em sistemas de design, essa biblioteca permite criar componentes com estilos responsivos baseados em temas."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Linaria"}),": Uma biblioteca que faz o CSS-in-JS funcionar sem a necessidade de tempo de execu\xe7\xe3o, transformando o CSS durante o build."]}),"\n"]}),"\n",(0,s.jsx)(o.p,{children:"Cada uma dessas bibliotecas oferece diferentes vantagens, dependendo das necessidades espec\xedficas do seu projeto."}),"\n",(0,s.jsx)(o.h2,{id:"conclus\xe3o",children:"Conclus\xe3o"}),"\n",(0,s.jsx)(o.p,{children:"A abordagem CSS-in-JS oferece uma s\xe9rie de vantagens para desenvolvedores React, desde a organiza\xe7\xe3o e manuten\xe7\xe3o de estilos at\xe9 a cria\xe7\xe3o de interfaces din\xe2micas e coesas. Ferramentas como Styled Components t\xeam se tornado indispens\xe1veis para muitos projetos modernos, trazendo um n\xedvel de modularidade e efici\xeancia que n\xe3o era poss\xedvel com as abordagens tradicionais de CSS. Ao adotar CSS-in-JS, voc\xea estar\xe1 se equipando com uma poderosa ferramenta para construir aplica\xe7\xf5es escal\xe1veis, f\xe1ceis de manter e com uma experi\xeancia de usu\xe1rio mais refinada."})]})}function m(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,o,a)=>{a.d(o,{R:()=>t,x:()=>r});var s=a(6540);const i={},n=s.createContext(i);function t(e){const o=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(n.Provider,{value:o},e.children)}}}]);