"use strict";(self.webpackChunksciotta_blog=self.webpackChunksciotta_blog||[]).push([[7351],{2903:(e,o,a)=>{a.r(o),a.d(o,{assets:()=>i,contentTitle:()=>n,default:()=>p,frontMatter:()=>t,metadata:()=>d,toc:()=>u});var r=a(4848),s=a(8453);const t={},n="Padr\xe3o Observer",d={id:"patterns/observer",title:"Padr\xe3o Observer",description:"O Padr\xe3o Observer \xe9 um dos padr\xf5es comportamentais que define uma depend\xeancia um-para-muitos entre objetos, de maneira que quando um objeto muda de estado, todos os seus dependentes s\xe3o notificados e atualizados automaticamente. Este padr\xe3o \xe9 \xfatil quando um objeto precisa notificar outros objetos sem precisar saber quem s\xe3o esses objetos.",source:"@site/docs/patterns/observer.md",sourceDirName:"patterns",slug:"/patterns/observer",permalink:"/docs/patterns/observer",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/patterns/observer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Design Patterns",permalink:"/docs/patterns/"},next:{title:"Padr\xe3o Singleton",permalink:"/docs/patterns/singleton"}},i={},u=[{value:"Quando usar o Padr\xe3o Observer?",id:"quando-usar-o-padr\xe3o-observer",level:2},{value:"Exemplo Pr\xe1tico em TypeScript",id:"exemplo-pr\xe1tico-em-typescript",level:2},{value:"Implementa\xe7\xe3o",id:"implementa\xe7\xe3o",level:3},{value:"Exemplo de uso",id:"exemplo-de-uso",level:3}];function c(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.h1,{id:"padr\xe3o-observer",children:"Padr\xe3o Observer"}),"\n",(0,r.jsx)(o.p,{children:"O Padr\xe3o Observer \xe9 um dos padr\xf5es comportamentais que define uma depend\xeancia um-para-muitos entre objetos, de maneira que quando um objeto muda de estado, todos os seus dependentes s\xe3o notificados e atualizados automaticamente. Este padr\xe3o \xe9 \xfatil quando um objeto precisa notificar outros objetos sem precisar saber quem s\xe3o esses objetos."}),"\n",(0,r.jsx)(o.h2,{id:"quando-usar-o-padr\xe3o-observer",children:"Quando usar o Padr\xe3o Observer?"}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsx)(o.li,{children:"Quando uma mudan\xe7a no estado de um objeto precisa ser refletida em outros objetos."}),"\n",(0,r.jsx)(o.li,{children:"Quando uma estrutura de eventos \xe9 necess\xe1ria e voc\xea quer desacoplar o c\xf3digo de emiss\xe3o de eventos do c\xf3digo de tratamento de eventos."}),"\n",(0,r.jsx)(o.li,{children:"Quando voc\xea deseja evitar chamadas de m\xe9todo diretas e criar um sistema de notifica\xe7\xe3o flex\xedvel e reutiliz\xe1vel."}),"\n"]}),"\n",(0,r.jsx)(o.h2,{id:"exemplo-pr\xe1tico-em-typescript",children:"Exemplo Pr\xe1tico em TypeScript"}),"\n",(0,r.jsx)(o.p,{children:"A seguir, veremos um exemplo de como o Padr\xe3o Observer pode ser implementado em TypeScript. Suponha que estamos desenvolvendo um sistema onde um Pok\xe9mon pode notificar o treinador Ash quando ele \xe9 golpeado durante uma batalha."}),"\n",(0,r.jsx)(o.h3,{id:"implementa\xe7\xe3o",children:"Implementa\xe7\xe3o"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-typescript",metastring:"reference",children:"https://github.com/sciotta/my-sandbox/blob/main/src/design-patterns/observer.ts\n"})}),"\n",(0,r.jsx)(o.h3,{id:"exemplo-de-uso",children:"Exemplo de uso"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-typescript",children:"const pikachu = new Pikachu();\nconst charizard = new Charizard();\n\n// Fun\xe7\xe3o que \xe9 chamada ao receber um ataque\nconst quandoAcontecerAtaque = (mensagem: string) => {\n  console.log(mensagem);\n}\n\nconst ash = new Ash(pikachu, charizard, quandoAcontecerAtaque);\n\npikachu.receberGolpe();\n// Output: Pikachu foi golpeado e sua vida \xe9: 90\ncharizard.receberGolpe()\n // Output: Charizard foi golpeado e sua vida \xe9: 130\n\nash.pararDeObservarPikachu();\npikachu.receberGolpe();\n// Nenhuma notifica\xe7\xe3o \xe9 enviada, pois Ash parou de observar Pikachu\n\ncharizard.receberGolpe();\n// Output: Charizard foi golpeado e sua vida \xe9: 110\n"})})]})}function p(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,o,a)=>{a.d(o,{R:()=>n,x:()=>d});var r=a(6540);const s={},t=r.createContext(s);function n(e){const o=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:n(e.components),r.createElement(t.Provider,{value:o},e.children)}}}]);