<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://sciotta.com.br/blog</id>
    <title>Sciotta</title>
    <updated>2024-08-12T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://sciotta.com.br/blog"/>
    <subtitle>Sciotta blog</subtitle>
    <icon>https://sciotta.com.br/img/favicon.ico</icon>
    <rights>Sciotta 2023</rights>
    <entry>
        <title type="html"><![CDATA[Desenvolvendo um App com React Native e DDD]]></title>
        <id>https://sciotta.com.br/blog/react-native-ddd</id>
        <link href="https://sciotta.com.br/blog/react-native-ddd"/>
        <updated>2024-08-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[O desenvolvimento de aplicativos móveis usando React Native oferece agilidade e flexibilidade. No entanto, para garantir que o código seja escalável e fácil de manter, é importante aplicar boas práticas de design de software, como o Domain-Driven Design (DDD).]]></summary>
        <content type="html"><![CDATA[<p>O desenvolvimento de aplicativos móveis usando React Native oferece agilidade e flexibilidade. No entanto, para garantir que o código seja escalável e fácil de manter, é importante aplicar boas práticas de design de software, como o Domain-Driven Design (DDD).</p>
<p>Neste artigo, vamos explorar como aplicar DDD em um projeto React Native usando TypeScript.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="estruturando-o-projeto-com-ddd">Estruturando o Projeto com DDD<a class="hash-link" aria-label="Link direto para Estruturando o Projeto com DDD" title="Link direto para Estruturando o Projeto com DDD" href="https://sciotta.com.br/blog/react-native-ddd#estruturando-o-projeto-com-ddd">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-identificando-o-domínio-principal">1. <strong>Identificando o Domínio Principal</strong><a class="hash-link" aria-label="Link direto para 1-identificando-o-domínio-principal" title="Link direto para 1-identificando-o-domínio-principal" href="https://sciotta.com.br/blog/react-native-ddd#1-identificando-o-dom%C3%ADnio-principal">​</a></h3>
<p>Antes de iniciar o desenvolvimento, entenda o domínio do problema que seu aplicativo resolverá. Suponha que estamos criando um app de e-commerce. Neste caso, entidades como "Produto", "Cliente" e "Pedido" seriam essenciais.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-camada-de-domínio">2. <strong>Camada de Domínio</strong><a class="hash-link" aria-label="Link direto para 2-camada-de-domínio" title="Link direto para 2-camada-de-domínio" href="https://sciotta.com.br/blog/react-native-ddd#2-camada-de-dom%C3%ADnio">​</a></h3>
<p>Nesta camada, você define as regras de negócio principais, dividindo-as em entidades, value objects, repositórios e serviços de domínio.</p>
<p><strong>Exemplo de Entidade:</strong></p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// src/domain/entities/Product.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Product</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">readonly</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> price</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">changePrice</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newPrice</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newPrice </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Price must be greater than zero."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">price </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> newPrice</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar código para a área de transferência" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Exemplo de Value Object:</strong></p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// src/domain/value-objects/Address.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Address</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">readonly</span><span class="token plain"> street</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">readonly</span><span class="token plain"> city</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">readonly</span><span class="token plain"> postalCode</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar código para a área de transferência" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Exemplo de Repositório:</strong></p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// src/domain/repositories/ProductRepository.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">ProductRepository</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Product </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">save</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">product</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Product</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">void</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar código para a área de transferência" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Exemplo de Serviço de Domínio:</strong></p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// src/domain/services/ProductService.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">ProductService</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> productRepository</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ProductRepository</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">updateProductPrice</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> newPrice</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">void</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> product </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">productRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">product</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Product not found"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    product</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">changePrice</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newPrice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">productRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">save</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">product</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar código para a área de transferência" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-camada-de-aplicação">3. <strong>Camada de Aplicação</strong><a class="hash-link" aria-label="Link direto para 3-camada-de-aplicação" title="Link direto para 3-camada-de-aplicação" href="https://sciotta.com.br/blog/react-native-ddd#3-camada-de-aplica%C3%A7%C3%A3o">​</a></h3>
<p>Os casos de uso do aplicativo são definidos nesta camada. Eles são os "application services" que orquestram as interações entre as entidades e serviços do domínio.</p>
<p><strong>Exemplo de Caso de Uso:</strong></p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// src/application/use-cases/AddProductToCart.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> Cart </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../entities/Cart"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> ProductRepository </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../../domain/repositories/ProductRepository"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">AddProductToCart</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> productRepository</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ProductRepository</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">execute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cart</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Cart</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> productId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">void</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> product </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">productRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">productId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">product</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Product not found"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cart</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">addProduct</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">product</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar código para a área de transferência" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-camada-de-infraestrutura">4. <strong>Camada de Infraestrutura</strong><a class="hash-link" aria-label="Link direto para 4-camada-de-infraestrutura" title="Link direto para 4-camada-de-infraestrutura" href="https://sciotta.com.br/blog/react-native-ddd#4-camada-de-infraestrutura">​</a></h3>
<p>Esta camada lida com as implementações concretas de persistência, APIs e outras infraestruturas necessárias.</p>
<p><strong>Exemplo de Implementação de Repositório:</strong></p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// src/infrastructure/repositories/InMemoryProductRepository.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> ProductRepository </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../../domain/repositories/ProductRepository"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> Product </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../../domain/entities/Product"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">InMemoryProductRepository</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">implements</span><span class="token plain"> </span><span class="token class-name">ProductRepository</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> products</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Product</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Product </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">products</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">product </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> product</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">save</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">product</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Product</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">void</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> index </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">products</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findIndex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> product</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">index </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">products</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> product</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">products</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">product</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar código para a área de transferência" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-camada-de-interface-do-usuário">5. <strong>Camada de Interface do Usuário</strong><a class="hash-link" aria-label="Link direto para 5-camada-de-interface-do-usuário" title="Link direto para 5-camada-de-interface-do-usuário" href="https://sciotta.com.br/blog/react-native-ddd#5-camada-de-interface-do-usu%C3%A1rio">​</a></h3>
<p>Nesta camada, os componentes React Native são definidos. Eles interagem com os casos de uso e exibem os dados para o usuário.</p>
<p><strong>Exemplo de Componente:</strong></p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// src/ui/components/ProductCard.tsx</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> React </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'react'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> View</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Text</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Button </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'react-native'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> Product </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../../domain/entities/Product'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">ProductCardProps</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  product</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Product</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function-variable function" style="color:#d73a49">onAddToCart</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> ProductCard</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> React</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">FC</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">ProductCardProps</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> product</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> onAddToCart </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">View</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Text</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">product</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">Text</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Text</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">product</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">price</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">Text</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Button title</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"Add to Cart"</span><span class="token plain"> onPress</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">onAddToCart</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">View</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar código para a área de transferência" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-testes">6. <strong>Testes</strong><a class="hash-link" aria-label="Link direto para 6-testes" title="Link direto para 6-testes" href="https://sciotta.com.br/blog/react-native-ddd#6-testes">​</a></h3>
<p>Os testes garantem que a lógica de negócio funcione conforme o esperado. Abaixo, vemos um exemplo de teste para o serviço de domínio <code>ProductService</code>.</p>
<p><strong>Exemplo de Teste com Jest:</strong></p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// src/domain/services/ProductService.test.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> ProductService </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./ProductService'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> InMemoryProductRepository </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../../infrastructure/repositories/InMemoryProductRepository'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> Product </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'../entities/Product'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">describe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'ProductService'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">it</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'should update the product price'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> productRepository </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">InMemoryProductRepository</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> productService </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">ProductService</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">productRepository</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> product </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Product</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Test Product'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> productRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">save</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">product</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> productService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">updateProductPrice</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> updatedProduct </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> productRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">updatedProduct</span><span class="token operator" style="color:#393A34">?.</span><span class="token plain">price</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toBe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">200</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar código para a área de transferência" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="próximos-passos">Próximos passos<a class="hash-link" aria-label="Link direto para Próximos passos" title="Link direto para Próximos passos" href="https://sciotta.com.br/blog/react-native-ddd#pr%C3%B3ximos-passos">​</a></h2>
<p>Aplicar DDD em um projeto React Native e TypeScript pode parecer complexo inicialmente, mas proporciona um código mais organizado, alinhado com o domínio e mais fácil de manter. Com esta estrutura, seu aplicativo estará melhor preparado para crescer e se adaptar às necessidades do negócio ao longo do tempo.</p>
<p>Em um próximo artigo, disponibilizarei um repositório preparado com um projeto base seguindo esse artigo.</p>]]></content>
        <author>
            <name>Thiago Sciotta</name>
            <uri>https://github.com/thiagog3</uri>
        </author>
        <category label="react-native" term="react-native"/>
        <category label="ddd" term="ddd"/>
        <category label="arquitetura" term="arquitetura"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vantagens de Usar CSS-in-JS em Aplicações React]]></title>
        <id>https://sciotta.com.br/blog/vantagens-css-in-js</id>
        <link href="https://sciotta.com.br/blog/vantagens-css-in-js"/>
        <updated>2024-04-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Com o crescimento do ecossistema React, a maneira de lidar com estilização em aplicações web evoluiu significativamente. Uma das abordagens que ganhou destaque é o CSS-in-JS, uma técnica que permite escrever estilos CSS diretamente dentro do JavaScript.]]></summary>
        <content type="html"><![CDATA[<p>Com o crescimento do ecossistema React, a maneira de lidar com estilização em aplicações web evoluiu significativamente. Uma das abordagens que ganhou destaque é o <strong>CSS-in-JS</strong>, uma técnica que permite escrever estilos CSS diretamente dentro do JavaScript.</p>
<p>Bibliotecas como <strong>Styled Components</strong> e outras ferramentas populares, como <strong>Emotion</strong> e <strong>Styled System</strong>, têm mudado a forma como desenvolvedores lidam com a estilização de componentes. Neste artigo, vamos explorar as vantagens de usar CSS-in-JS em suas aplicações React e como isso pode melhorar a produtividade e a manutenção do seu código.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="o-que-é-css-in-js">O Que é CSS-in-JS?<a class="hash-link" aria-label="Link direto para O Que é CSS-in-JS?" title="Link direto para O Que é CSS-in-JS?" href="https://sciotta.com.br/blog/vantagens-css-in-js#o-que-%C3%A9-css-in-js">​</a></h2>
<p>CSS-in-JS é uma abordagem que permite que você escreva CSS diretamente dentro de arquivos JavaScript. Isso significa que você pode criar e aplicar estilos a componentes React de uma forma programática, utilizando toda a flexibilidade da linguagem JavaScript. As bibliotecas que implementam essa técnica geralmente permitem a criação de componentes estilizados, onde os estilos são diretamente associados ao comportamento e estado dos componentes.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="vantagens-do-css-in-js">Vantagens do CSS-in-JS<a class="hash-link" aria-label="Link direto para Vantagens do CSS-in-JS" title="Link direto para Vantagens do CSS-in-JS" href="https://sciotta.com.br/blog/vantagens-css-in-js#vantagens-do-css-in-js">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-escopo-local-e-previsível">1. Escopo Local e Previsível<a class="hash-link" aria-label="Link direto para 1. Escopo Local e Previsível" title="Link direto para 1. Escopo Local e Previsível" href="https://sciotta.com.br/blog/vantagens-css-in-js#1-escopo-local-e-previs%C3%ADvel">​</a></h3>
<p>Uma das maiores vantagens do CSS-in-JS é o escopo local dos estilos. Em abordagens tradicionais com CSS, é fácil acidentalmente sobrescrever estilos devido ao escopo global das classes CSS. Com CSS-in-JS, os estilos são encapsulados dentro dos componentes, garantindo que não haja colisões inesperadas. Isso significa que você pode nomear seus componentes de forma mais intuitiva, sem se preocupar com o impacto no restante da aplicação.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-dinamicidade-e-flexibilidade">2. Dinamicidade e Flexibilidade<a class="hash-link" aria-label="Link direto para 2. Dinamicidade e Flexibilidade" title="Link direto para 2. Dinamicidade e Flexibilidade" href="https://sciotta.com.br/blog/vantagens-css-in-js#2-dinamicidade-e-flexibilidade">​</a></h3>
<p>Styled Components e outras bibliotecas CSS-in-JS permitem que você utilize variáveis, operadores e lógica dentro do seu CSS. Isso torna possível criar estilos dinâmicos que respondem diretamente ao estado dos componentes ou às props passadas. Por exemplo, você pode alterar a cor de um botão com base no estado de erro ou sucesso, sem precisar adicionar ou remover classes manualmente:</p>
<p>```javascript
const Button = styled.button`
background-color: $<!-- -->;
color: white;
padding: 10px 20px;
border-radius: 5px;
`;
```</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-melhor-manutenção-e-organização">3. Melhor Manutenção e Organização<a class="hash-link" aria-label="Link direto para 3. Melhor Manutenção e Organização" title="Link direto para 3. Melhor Manutenção e Organização" href="https://sciotta.com.br/blog/vantagens-css-in-js#3-melhor-manuten%C3%A7%C3%A3o-e-organiza%C3%A7%C3%A3o">​</a></h3>
<p>Manter o código CSS pode se tornar uma tarefa complexa à medida que o projeto cresce. Com CSS-in-JS, os estilos são diretamente associados aos componentes, o que facilita a manutenção. Além disso, a reutilização de estilos se torna mais prática, já que você pode criar componentes estilizados que podem ser compartilhados em toda a aplicação.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-remoção-de-estilos-não-utilizados">4. Remoção de Estilos Não Utilizados<a class="hash-link" aria-label="Link direto para 4. Remoção de Estilos Não Utilizados" title="Link direto para 4. Remoção de Estilos Não Utilizados" href="https://sciotta.com.br/blog/vantagens-css-in-js#4-remo%C3%A7%C3%A3o-de-estilos-n%C3%A3o-utilizados">​</a></h3>
<p>Em aplicações grandes, é comum que o CSS cresça descontroladamente, com muitos estilos não utilizados. CSS-in-JS resolve esse problema naturalmente, pois os estilos são aplicados apenas aos componentes que estão em uso. Isso contribui para uma base de código mais enxuta e otimizada.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-integração-com-o-ecossistema-react">5. Integração com o Ecossistema React<a class="hash-link" aria-label="Link direto para 5. Integração com o Ecossistema React" title="Link direto para 5. Integração com o Ecossistema React" href="https://sciotta.com.br/blog/vantagens-css-in-js#5-integra%C3%A7%C3%A3o-com-o-ecossistema-react">​</a></h3>
<p>CSS-in-JS se integra perfeitamente ao ecossistema React, facilitando o desenvolvimento de componentes coesos e reutilizáveis. Além disso, a integração com ferramentas de desenvolvimento como o ThemeProvider, do Styled Components, permite a aplicação de temas em toda a aplicação de forma consistente e fácil de gerenciar.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-suporte-a-ssr-server-side-rendering">6. Suporte a SSR (Server-Side Rendering)<a class="hash-link" aria-label="Link direto para 6. Suporte a SSR (Server-Side Rendering)" title="Link direto para 6. Suporte a SSR (Server-Side Rendering)" href="https://sciotta.com.br/blog/vantagens-css-in-js#6-suporte-a-ssr-server-side-rendering">​</a></h3>
<p>Uma preocupação comum ao utilizar CSS-in-JS é o suporte ao Server-Side Rendering (SSR). Felizmente, bibliotecas como Styled Components possuem suporte robusto a SSR, garantindo que os estilos sejam aplicados corretamente durante a renderização no servidor, melhorando a performance e o SEO da aplicação.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="outras-abordagens-e-bibliotecas">Outras Abordagens e Bibliotecas<a class="hash-link" aria-label="Link direto para Outras Abordagens e Bibliotecas" title="Link direto para Outras Abordagens e Bibliotecas" href="https://sciotta.com.br/blog/vantagens-css-in-js#outras-abordagens-e-bibliotecas">​</a></h2>
<p>Além do Styled Components, outras bibliotecas populares no ecossistema CSS-in-JS incluem:</p>
<ul>
<li><strong>Emotion</strong>: Uma biblioteca flexível que oferece uma API similar ao Styled Components, com excelente suporte a temas e alta performance.</li>
<li><strong>Styled System</strong>: Focado em sistemas de design, essa biblioteca permite criar componentes com estilos responsivos baseados em temas.</li>
<li><strong>Linaria</strong>: Uma biblioteca que faz o CSS-in-JS funcionar sem a necessidade de tempo de execução, transformando o CSS durante o build.</li>
</ul>
<p>Cada uma dessas bibliotecas oferece diferentes vantagens, dependendo das necessidades específicas do seu projeto.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusão">Conclusão<a class="hash-link" aria-label="Link direto para Conclusão" title="Link direto para Conclusão" href="https://sciotta.com.br/blog/vantagens-css-in-js#conclus%C3%A3o">​</a></h2>
<p>A abordagem CSS-in-JS oferece uma série de vantagens para desenvolvedores React, desde a organização e manutenção de estilos até a criação de interfaces dinâmicas e coesas. Ferramentas como Styled Components têm se tornado indispensáveis para muitos projetos modernos, trazendo um nível de modularidade e eficiência que não era possível com as abordagens tradicionais de CSS. Ao adotar CSS-in-JS, você estará se equipando com uma poderosa ferramenta para construir aplicações escaláveis, fáceis de manter e com uma experiência de usuário mais refinada.</p>]]></content>
        <author>
            <name>Thiago Sciotta</name>
            <uri>https://github.com/thiagog3</uri>
        </author>
        <category label="frontend" term="frontend"/>
        <category label="css" term="css"/>
        <category label="react" term="react"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Magia das Viagens e Suas Lembranças Inesquecíveis]]></title>
        <id>https://sciotta.com.br/blog/explorando-o-mundo</id>
        <link href="https://sciotta.com.br/blog/explorando-o-mundo"/>
        <updated>2023-08-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Viajar é uma experiência verdadeiramente mágica. Apesar de alguns discordarem, o ato de deixar para trás o conforto do lar e se aventurar por terras desconhecidas pode ser trabalhoso.]]></summary>
        <content type="html"><![CDATA[<p>Viajar é uma experiência verdadeiramente mágica. Apesar de alguns discordarem, o ato de deixar para trás o conforto do lar e se aventurar por terras desconhecidas pode ser trabalhoso.</p>
<p>Horas em um carro, avião ou até mesmo em um navio podem parecer cansativas. Além disso, no meio de tantas possibilidades, imprevistos podem surgir: desde ficar sem dinheiro até lidar com roubos ou doenças. A lista de desafios é extensa e muitas vezes imprevisível.</p>
<p>Mas diante de todas essas objeções, o que nos motiva a deixar nosso cantinho aconchegante e explorar novos horizontes, culturas diversas e a vivenciar novos sabores, cheiros, lugares e idiomas?</p>
<p>Embora eu não me considere uma pessoa “extremamente viajada”, talvez seja justamente essa falta de excesso que aguça minha curiosidade pelo mundo. Na minha perspectiva, viajar é a oportunidade de transformar as visões imaginárias em memórias valiosas.</p>
<p>É notável como nossa mente cria uma imagem de um determinado lugar e, quando finalmente o visitamos, essas imaginações ganham vida, transformando-se em lembranças reais. São essas memórias que revisitamos em nossos pensamentos, permitindo-nos reviver parte daquilo que já experimentamos.</p>
<p>Para mim, a verdadeira magia das viagens reside na habilidade de transcender o mundo mental e imagético para dar vida à realidade. Cada aventura é como um pincelada que acrescentamos à tela da nossa vida, colorindo-a com experiências únicas e enriquecedoras.</p>
<p>Viajar é mais do que apenas visitar lugares; é mergulhar em novas perspectivas, desafiar nossas próprias limitações e abraçar o desconhecido de braços abertos. É sobre criar histórias que nos acompanharão ao longo dos anos, histórias que serão contadas inúmeras vezes para amigos e familiares.</p>
<p>Em última análise, viajar é um convite para explorar, aprender e crescer. É uma janela para o mundo e para nós mesmos. À medida que nos aventuramos por terras distantes, estamos tecendo a tapeçaria de nossas vidas com as linhas vibrantes das memórias que acumulamos ao longo do caminho. Portanto, que possamos continuar a abraçar a magia das viagens, transformando o desconhecido em parte de quem somos.</p>]]></content>
        <author>
            <name>Thiago Sciotta</name>
            <uri>https://github.com/thiagog3</uri>
        </author>
        <category label="pensamentos" term="pensamentos"/>
        <category label="reflexões" term="reflexões"/>
        <category label="diário" term="diário"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pertencimento e gratidão]]></title>
        <id>https://sciotta.com.br/blog/pertencimento-e-gratidao</id>
        <link href="https://sciotta.com.br/blog/pertencimento-e-gratidao"/>
        <updated>2021-05-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Há 10 dias, tive a oportunidade através do Rotaract de Taubaté, no qual faço parte, de palestrar de forma remota, para mais de 60 adolescentes de 4 escolas públicas diferentes da cidade. Foi uma oportunidade única que sou muito grato e tenho muito orgulho de mim mesmo pelo feito. Sim, sentir orgulho próprio não é errado.]]></summary>
        <content type="html"><![CDATA[<p>Há 10 dias, tive a oportunidade através do <a href="https://www.instagram.com/rotaract_taubate/" target="_blank" rel="noopener noreferrer">Rotaract de Taubaté</a>, no qual faço parte, de palestrar de forma remota, para mais de 60 adolescentes de 4 escolas públicas diferentes da cidade. Foi uma oportunidade única que sou muito grato e tenho muito orgulho de mim mesmo pelo feito. Sim, sentir orgulho próprio não é errado.</p>
<p>Quem me conhece sabe quantas coisas passei para chegar até aqui. E tem haver com ser alguém que tenta se lapidar dia após dia, desafio após desafio com a finalidade de ser uma pessoa melhor para mim e para a sociedade na qual vivo. Bom, vou resumir o que foi essa manhã de sábado tão incrível que vivi.</p>
<table><thead><tr><th style="text-align:center"><img decoding="async" loading="lazy" alt="Uma pedra sendo lapidada" src="https://sciotta.com.br/assets/images/cube-stone-c7c1a64797fc5b2f37f654bb18acc279.jpg" width="1920" height="1080" class="img_ev3q"></th></tr></thead><tbody><tr><td style="text-align:center"><em>Foto tirada por San Moghadam Khamseh em 2010.</em></td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="o-evento-ryla">O evento RYLA.<a class="hash-link" aria-label="Link direto para O evento RYLA." title="Link direto para O evento RYLA." href="https://sciotta.com.br/blog/pertencimento-e-gratidao#o-evento-ryla">​</a></h2>
<p>O programa chama-se Prêmios Rotários de Liderança Juvenil (Rotary Youth Leadership Awards) e é organizado pelo Rotary para incentivar e desenvolver habilidades de liderança nos jovens. Para saber mais, <a href="https://www.rotary.org/pt/our-programs/rotary-youth-leadership-awards" target="_blank" rel="noopener noreferrer">veja aqui</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="o-tema-liderança-na-era-da-tecnologia">O tema: Liderança na era da tecnologia.<a class="hash-link" aria-label="Link direto para O tema: Liderança na era da tecnologia." title="Link direto para O tema: Liderança na era da tecnologia." href="https://sciotta.com.br/blog/pertencimento-e-gratidao#o-tema-lideran%C3%A7a-na-era-da-tecnologia">​</a></h2>
<p>Quando fui convidado, tínhamos a intensão de fazer uma palestra para mostrar as profissões do futuro na área de tecnologia, mas evoluímos para levar um tema mais pertinente que envolvesse o tema principal: liderança com um pouco de foco na evolução da tecnologia e com ênfase nos aspectos que uma pessoa líder deve ter.</p>
<table><thead><tr><th style="text-align:center"><img decoding="async" loading="lazy" alt="Barcos de papel em formação de liderança triangular" src="https://sciotta.com.br/assets/images/barcos-de-papel-ed7544754b893bfcd21f7430dd3211b8.jpg" width="1920" height="1280" class="img_ev3q"></th></tr></thead><tbody><tr><td style="text-align:center"><em>Photo by KOBU Agency on Unsplash</em></td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="o-primeiro-dia-01052021">O primeiro dia: 01/05/2021.<a class="hash-link" aria-label="Link direto para O primeiro dia: 01/05/2021." title="Link direto para O primeiro dia: 01/05/2021." href="https://sciotta.com.br/blog/pertencimento-e-gratidao#o-primeiro-dia-01052021">​</a></h2>
<p>O evento foi dividido em dois sábados. Este primeiro foi com a apresentação e dinâmicas da Tati sobre comunicação não violenta. O mais incrível que não achamos que os jovens fossem tão engajados, participativos e tão organizados. Mas a cada participação, a cada fala e comentário durante os momentos propostos, pude perceber como a nova geração está marcada para mudar o mundo e escrever novas páginas na história da humanidade.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="o--segundo-dia-08052021">O  segundo dia: 08/05/2021.<a class="hash-link" aria-label="Link direto para O  segundo dia: 08/05/2021." title="Link direto para O  segundo dia: 08/05/2021." href="https://sciotta.com.br/blog/pertencimento-e-gratidao#o--segundo-dia-08052021">​</a></h2>
<p>Com o primeiro dia tão incrível, senti o peso da responsabilidade de levar algo que eu queria ouvir quando tinha a idade deles. Já tinha preparado toda a apresentação e pensado e repensado em tudo que iria falar e como seriam as dinâmicas. Foi outro dia fantástico com muitos insights, participações e acredito que consegui deixar a mensagem que queria.</p>
<p>Para quem tiver curiosidade dos slides apresentados, compartilhei no <a href="https://pt.slideshare.net/ThiagoSciotta/liderana-na-era-tecnolgica" target="_blank" rel="noopener noreferrer">Slideshare</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusão">Conclusão<a class="hash-link" aria-label="Link direto para Conclusão" title="Link direto para Conclusão" href="https://sciotta.com.br/blog/pertencimento-e-gratidao#conclus%C3%A3o">​</a></h2>
<p>No final das contas, só tenho a conclusão de que quando nos doamos sem pretensão, sem almejar nada em troca, o sentimento de gratidão e de devolução de algo que nunca foi nosso é IMENSO. É como um carinho do universo, como um sentimento imenso de pertencer a algo maior.</p>
<p>Encorajo a cada um de vocês a participarem de algum projeto que possa servir ao próximo. Essa sensação de pertencimento e de se doar é indescritível com palavras.</p>]]></content>
        <author>
            <name>Thiago Sciotta</name>
            <uri>https://github.com/thiagog3</uri>
        </author>
        <category label="gratidão" term="gratidão"/>
        <category label="pertencimento" term="pertencimento"/>
        <category label="filosofia" term="filosofia"/>
        <category label="vida" term="vida"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fatores que fazem a diferença ao lidar com tecnologia e produto]]></title>
        <id>https://sciotta.com.br/blog/tres-fatores</id>
        <link href="https://sciotta.com.br/blog/tres-fatores"/>
        <updated>2021-04-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Sendo nós desenvolvedores, sempre tentamos nos aperfeiçoar em termos tecnológicos: testar um novo framework, uma nova linguagem ou uma tecnologia nova que nos chama a atenção. Mas até que ponto isso interfere na entrega final  para os usuários?]]></summary>
        <content type="html"><![CDATA[<p>Sendo nós desenvolvedores, sempre tentamos nos aperfeiçoar em termos tecnológicos: testar um novo framework, uma nova linguagem ou uma tecnologia nova que nos chama a atenção. Mas até que ponto isso interfere na entrega final  para os usuários?</p>
<p>Ao se tratar do desenvolvimento de um produto, temos alguns recursos que são finitos: como o tempo e o dinheiro (há quem diz que são a mesma coisa). Um produto atrasado representa maior custo e abre a possibilidade de algum concorrente sair na frente. Por isso, precisamos trabalhar com os dois lados da mesma moeda. Ser conservador em termos tecnológicos ou partir sempre para a inovação sem limites. Como encontrar um balanço justo?</p>
<p>A finalidade desse post é ser prático apresentando de forma resumida e em poucas palavras, esses recursos e dissertando um pouco a função de cada uma:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ser-conservador-no-começo-é-essencial">Ser conservador no começo é essencial.<a class="hash-link" aria-label="Link direto para Ser conservador no começo é essencial." title="Link direto para Ser conservador no começo é essencial." href="https://sciotta.com.br/blog/tres-fatores#ser-conservador-no-come%C3%A7o-%C3%A9-essencial">​</a></h2>
<p>Queremos sempre inovar, isso é um fato. Mas se tratando de um produto novo, temos um mar de incertezas a ser desbravado e o que mais queremos é <strong>resolver a dor de nossos usuários e saber se esse produto vai ter uma boa aderência no mercado.</strong></p>
<p>Para isso, temos processos de validações e experimentações, que envolve criar um pequeno pedaço do produto e testá-lo com um grupo de possíveis usuários, com a finalidade de entender se as hipóteses que temos são válidas ou não. Daí a necessidade de entregas ágeis em ciclos curtos. Ter uma hipótese (ideia) → gerar o experimento (codar) → validar (mensurar e analisar os dados) → aprender com os resultados.</p>
<p><img decoding="async" loading="lazy" alt="Build, measure, learn" src="https://sciotta.com.br/assets/images/build_measure_learn-d49b4faca4921cf7c21c0259abfd123a.jpg" width="380" height="380" class="img_ev3q"></p>
<p>Quanto mais rápido e assertivo este ciclo, mais maduro e afiado para resolver a dor do usuário seu produto ficará. Seguindo então a velha máxima: errar rápido para corrigir rápido.</p>
<p>Você já deve ter percebido que nesta etapa de validações iniciais, onde você quer provar as suas hipóteses, é crucial a velocidade: quanto mais domínio das tecnologias envolvidas, mais rápido vai ser as entregas. Por isso, utilize o que o seu time já tem o know-how. Dessa forma, mais rápido você conseguirá implementar aquele “pedacinho” e entender se faz sentido para os futuros clientes. Lembre-se: a <strong>maior descoberta a ser feita nesse momento é a validação da hipótese em si</strong>.</p>
<p>É claro que irá existir validações durante toda a vida do produto. Mas enquanto seu projeto não entra na fase de escalada, ou seja, ainda não ganhou tração, não caminha com "as próprias pernas", esse ciclo deve ser seguido com a finalidade de provar o valor que o produto entrega.</p>
<p>Conforme o ciclo roda, são possibilidades da evolução técnica também! A ideia não é anular a tecnologia, mas focar no que mais interessa: resolver <strong>o problema do usuário</strong>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ser-simples-sem-ser-simplório">Ser simples, sem ser simplório.<a class="hash-link" aria-label="Link direto para Ser simples, sem ser simplório." title="Link direto para Ser simples, sem ser simplório." href="https://sciotta.com.br/blog/tres-fatores#ser-simples-sem-ser-simpl%C3%B3rio">​</a></h2>
<p>Por outro lado, devemos tomar todo o cuidado do mundo para não gerar retrabalho. <strong>Um código simples não é o mesmo que não testado ou mal escrito.</strong></p>
<p><img decoding="async" loading="lazy" src="https://media.giphy.com/media/dlMIwDQAxXn1K/giphy.gif" alt="Paciência!" class="img_ev3q"></p>
<p>Há uma diferença fundamental entre ser simples e ser simplório. <strong>Os simples resolvem a complexidade, os simplórios a evitam.</strong></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="padrões-para-manter-a-consistência">Padrões para manter a consistência.<a class="hash-link" aria-label="Link direto para Padrões para manter a consistência." title="Link direto para Padrões para manter a consistência." href="https://sciotta.com.br/blog/tres-fatores#padr%C3%B5es-para-manter-a-consist%C3%AAncia">​</a></h3>
<p>Existem meios de manter o time focado na entrega do produto e ao mesmo tempo garantir que está sendo entregue código de qualidade. Algumas dicas podem ser úteis nesse processo:</p>
<ul>
<li>Para iniciar a arquitetura, um bom ponto de partida é usar um gerador de projetos por possibilitar criar algo instantaneamente e com um padrão pré-estabelecido. No front, diria algo como o create-react-app do React ou o vue CLI do vuejs.</li>
<li>Boas práticas devem ser seguidas desde o começo. Adotando uma arquitetura e um estilo de código difundido, ajuda o trabalho em equipe ficar mais simples, na comunicacao e na homogeneidade e leitura do código.</li>
<li>Sugiro fortemente a adoção de uma ferramenta de teste estático como o Eslint para javascript e um preset de regras como o do Airbnb. A execucao dessa ferramenta pode ser facilmente integrado ao pré-commit usando o Husky por exemplo, ou diretamente através do Github Actions, CI do próprio Github, evitando que códigos sejam mesclados na sua branch principal fora do padrão pré estabelecido.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="automatizar-processos-repetitivos-e-ganhar-tempo">Automatizar processos repetitivos e ganhar tempo.<a class="hash-link" aria-label="Link direto para Automatizar processos repetitivos e ganhar tempo." title="Link direto para Automatizar processos repetitivos e ganhar tempo." href="https://sciotta.com.br/blog/tres-fatores#automatizar-processos-repetitivos-e-ganhar-tempo">​</a></h3>
<p>É importante que desde o começo, seu projeto seja capaz de realizar trabalhos repetitivos de forma automática, liberando o tempo para se preocupar com o que realmente interessa e não com algo que possa ser facilmente automatizado.</p>
<p><img decoding="async" loading="lazy" src="https://media.giphy.com/media/1nR6fu93A17vWZbO9c/giphy.gif" alt="Automatização com Riquinho Rico" class="img_ev3q"></p>
<p>Hoje em dia, existem muitas ferramentas de automatização para realizar integração contínua e deploy contínuo (<code>CI/CD</code>). Alguns deles diretamente na plataforma de repositórios que você pode estar utilizando hoje mesmo. Através dessas plataformas, você consegue disparar ações a partir de eventos. Exemplos como: ao criar um Pull Request, execute os testes e análise estática (<code>lint</code>), ou mesmo ao fazer o merge de um PR na branch principal, execute os procedimentos de build e já publique a aplicação.</p>
<p>As documentações costumam ser bem ricas e com pouco conhecimento de <code>.yaml</code> é possível criar processos que ao longo do percurso de desenvolvimento, poupará muito tempo do seu time. Algumas dessas ferramentas, seriam:</p>
<ul>
<li>Github Actions</li>
<li>Gitlab CI</li>
<li>Bitbucket Pipelines</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="quebre-um-grande-problema-em-partes-menores">Quebre um grande problema em partes menores.<a class="hash-link" aria-label="Link direto para Quebre um grande problema em partes menores." title="Link direto para Quebre um grande problema em partes menores." href="https://sciotta.com.br/blog/tres-fatores#quebre-um-grande-problema-em-partes-menores">​</a></h2>
<p>Este fator pode ser mais teórico, mas não menos importante que os outros.</p>
<p>Muitas vezes será preciso inovar e fazer algo que seja difícil de encontrar um case tão pronto e maduro. Talvez pode ser preciso criar um experimento, às vezes vários experimentos. Assim como o processo de validação de uma hipótese, também é preciso aprender rápido com isso!</p>
<p><img decoding="async" loading="lazy" src="https://media.giphy.com/media/1iW2g0lzwdRqNu3m/giphy.gif" alt="Experimentos!" class="img_ev3q"></p>
<p>Desenvolver experimentos grandes, podem lhe fazer gastar um tempo desnecessário, caso descubra tardiamente que caminhou na direção errada. <strong>Crie pequenas provas de conceitos que se provem, que consigam validar uma parte menor.</strong> Continue validando e conectando os pontos. Seguir dessa maneira pode te ajudar a encontrar uma solução para um problema maior sem ficar preso em um conceito muito complexo de digerir de uma vez só.</p>
<p>Pode parecer conceitual demais, mas sempre aplico essa abordagem quando preciso fazer algo diferente do cotidiano. Desde escolher um novo Framework UI para algum projeto até mesmo para definir a arquitetura de um projeto mais complexo e grande.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusão">Conclusão<a class="hash-link" aria-label="Link direto para Conclusão" title="Link direto para Conclusão" href="https://sciotta.com.br/blog/tres-fatores#conclus%C3%A3o">​</a></h2>
<p>Com esse conteúdo, tentei passar conhecimentos que aprendi participando do desenvolvimento de  produtos digitais. Entregar inovação tecnológica e valor ao cliente ao mesmo tempo é sempre algo desafiador que irá nos trazer aprendizados inesgotáveis. <strong>E ai? Tem alguma experiência ou aprendizado que fez toda a diferença para você?</strong></p>]]></content>
        <author>
            <name>Thiago Sciotta</name>
            <uri>https://github.com/thiagog3</uri>
        </author>
        <category label="front-end" term="front-end"/>
        <category label="ci" term="ci"/>
        <category label="automação" term="automação"/>
        <category label="engenharia" term="engenharia"/>
        <category label="produto" term="produto"/>
        <category label="tecnologia" term="tecnologia"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Segurança no front-end]]></title>
        <id>https://sciotta.com.br/blog/seguranca-front-end</id>
        <link href="https://sciotta.com.br/blog/seguranca-front-end"/>
        <updated>2021-03-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[É importante restringir e se assegurar também através do front-end, informando para o browser o que pode e o que não pode ser feito. Utilizando da declaração de algumas meta-tags e headers de resposta HTTP, conseguimos por exemplo, bloquear a manipulação e injeções de scripts maliciosos que podem, inclusive, roubar dados e capturar informações dos seus usuários através do seu site ou aplicação web.]]></summary>
        <content type="html"><![CDATA[<p>É importante restringir e se assegurar também através do front-end, informando para o browser o que pode e o que não pode ser feito. Utilizando da declaração de algumas meta-tags e headers de resposta HTTP, conseguimos por exemplo, bloquear a manipulação e injeções de scripts maliciosos que podem, inclusive, roubar dados e capturar informações dos seus usuários através do seu site ou aplicação web.</p>
<p>Lembrando que essas definições (independente se for meta-tags ou headers) são bloqueadas e/ou tratadas do lado do cliente, ou seja, pelo browser.</p>
<p>A finalidade desse post é ser prático apresentando de forma resumida e em poucas palavras, esses recursos e dissertando um pouco a função de cada uma:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="strict-transport-security">Strict-Transport-Security<a class="hash-link" aria-label="Link direto para Strict-Transport-Security" title="Link direto para Strict-Transport-Security" href="https://sciotta.com.br/blog/seguranca-front-end#strict-transport-security">​</a></h3>
<p>É uma forma de bloqueio a requisições não seguras, forçando o navegador a utilizar conexões seguras. Qualquer requisição feita através da sua aplicação que seja HTTP, será automaticamente redirecionada para HTTPS.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="content-security-policy">Content-Security-Policy<a class="hash-link" aria-label="Link direto para Content-Security-Policy" title="Link direto para Content-Security-Policy" href="https://sciotta.com.br/blog/seguranca-front-end#content-security-policy">​</a></h3>
<p>Meta tag para especificar a política de requisições de conteúdo na sua aplicação. Resumindo em poucas palavras, é útil para impedir que injetem conteúdos (imagens, scripts e estilos) de fora dos domínios descritos no atributo <code>content</code> desta tag.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="x-frame-options">X-Frame-Options<a class="hash-link" aria-label="Link direto para X-Frame-Options" title="Link direto para X-Frame-Options" href="https://sciotta.com.br/blog/seguranca-front-end#x-frame-options">​</a></h3>
<p>É um cabeçalho de resposta HTTP (HTTP response Header), responsável por impedir que sua página seja incorporada em outros sites via <code>iframe</code>. Impedindo que tecnicas como <code>Clickjacking</code> seja aplicadas a usuários desavisados.</p>
<blockquote>
<p><strong>Clickjacking</strong> é uma técnica maliciosa que induz um usuário a clicar em algo diferente do que o usuário enxerga, potencialmente revelando informações confidenciais ou assumindo o controle de seu computador enquanto o usuário clica em páginas web aparentemente inofensivas.</p>
</blockquote>
<blockquote>
<p>Diferentemente das meta-tags, os <strong>cabeçalhos de respostas</strong> vem no header de resposta da sua página, ou seja,
a implementação não é declarada no conteúdo do HTML e sim controlado e definido pelo servidor HTTP ou proxy reverso que
entrega seu conteúdo para quem requisitou. Para setá-lo é preciso saber como sua página é entregue e assim adicionar essa
propriedade ao cabeçalho de resposta.</p>
</blockquote>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="x-content-type-options">X-Content-Type-Options<a class="hash-link" aria-label="Link direto para X-Content-Type-Options" title="Link direto para X-Content-Type-Options" href="https://sciotta.com.br/blog/seguranca-front-end#x-content-type-options">​</a></h3>
<p>Assim como o <code>X-Frame-Options</code>, também é um cabeçalho de respostas (incorporado a resposta do servidor) que serve para arquivos de script e estilo. Impede que esses tipos sejam incorporados no site sem o seu tipo MIME correto.</p>
<p>Este header foi incluído no IE 8 como uma maneira dos desenvolvedores serem capazes de bloquear o <a href="https://en.wikipedia.org/wiki/Content_sniffing" target="_blank" rel="noopener noreferrer">sniffing</a> de conteúdo que acontecia na época, e podia transformar tipos MIME não executáveis em tipos executáveis.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="referrer-policy">Referrer-Policy<a class="hash-link" aria-label="Link direto para Referrer-Policy" title="Link direto para Referrer-Policy" href="https://sciotta.com.br/blog/seguranca-front-end#referrer-policy">​</a></h3>
<p>Controla quanta informação será passada no header <code>Referer</code> quando sua página ou sistema fazer uma requisição. Ou seja, esse header pode impedir, por exemplo, que ao acessar um link externo dentro da sua página saiba qual a sua origem (a sua página).</p>
<blockquote>
<p>Apesar do cabeçalho <em>Referer</em> tenha diversos usos inocentes, ele pode ter consequências indesejáveis para segurança e privacidade dos usuários.</p>
</blockquote>
<blockquote>
<p>Curiosidade: o cabeçalho Referer é um typo, ou seja é um erro ortográfico, foi mantido como na primeira definição, mas a ortografia correta seria "Referrer". O cabeçalho de política desse campo (Referrer-Policy) não compartilha desse erro.</p>
</blockquote>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="permissions-policy">Permissions-Policy<a class="hash-link" aria-label="Link direto para Permissions-Policy" title="Link direto para Permissions-Policy" href="https://sciotta.com.br/blog/seguranca-front-end#permissions-policy">​</a></h3>
<p>Permissions Policy, antes chamada de Feature Policy é um header de resposta e uma política nova para controle de permissões de recursos que sua página pode precisar acessar, como geolocalização, full-screen, sensores e etc.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="dica-final">Dica final<a class="hash-link" aria-label="Link direto para Dica final" title="Link direto para Dica final" href="https://sciotta.com.br/blog/seguranca-front-end#dica-final">​</a></h2>
<p>Por último e não menos importante, quero deixar também um site onde você consegue "escanear" as vulnerabilidades de uma URL,
baseados nesses recursos aqui apresentados: <a href="https://securityheaders.com/" target="_blank" rel="noopener noreferrer">https://securityheaders.com/</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusão">Conclusão<a class="hash-link" aria-label="Link direto para Conclusão" title="Link direto para Conclusão" href="https://sciotta.com.br/blog/seguranca-front-end#conclus%C3%A3o">​</a></h2>
<p>O foco desse post foi demonstrar com poucas palavras a utilização das técnicas de segurança aplicadas "para o lado do cliente" sem adentrar na aplicação técnica de cada uma. Qualquer dúvida com a implementação, bora trocar uma idéia! :)</p>]]></content>
        <author>
            <name>Thiago Sciotta</name>
            <uri>https://github.com/thiagog3</uri>
        </author>
        <category label="segurança" term="segurança"/>
        <category label="front-end" term="front-end"/>
    </entry>
</feed>